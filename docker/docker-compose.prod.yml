services:
  api:
    image: template-monorepo-ts/api:prod
    container_name: template-monorepo-ts_api
    build:
      context: ..
      dockerfile: apps/api/Dockerfile
      target: prod
    depends_on:
      db:
        condition: service_started
    restart: always
    working_dir: /app
    ports:
    - 8081:8080
    env_file:
    - ../apps/api/.env.docker
    environment:
    - API__PORT=8080
    - API__DB_URL=postgresql://admin:admin@db:5432/template-monorepo-ts?schema=public
    - API__PRISMA_SCHEMA_PATH=/app/schema.prisma
    networks:
    - template-monorepo-ts-network

  docs:
    image: template-monorepo-ts/docs:prod
    container_name: template-monorepo-ts_docs
    build:
      context: ..
      dockerfile: apps/docs/Dockerfile
      target: prod
    restart: always
    working_dir: /app
    ports:
    - 8082:8080
    networks:
    - template-monorepo-ts-network

  db:
    image: docker.io/postgres:17.6
    container_name: template-monorepo-ts_postgres
    restart: always
    ports:
    - 5432:5432
    environment:
      POSTGRES_DB: template-monorepo-ts
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    volumes:
    - template-monorepo-ts-data-prod:/var/lib/postgresql/data
    networks:
    - template-monorepo-ts-network
    attach: false

volumes:
  template-monorepo-ts-data-prod:

networks:
  template-monorepo-ts-network:
    driver: bridge
    # driver_opts:
    # com.docker.network.driver.mtu: 1450

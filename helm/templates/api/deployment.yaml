apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "template.api.fullname" . }}
  labels:
    {{- include "template.api.labels" . | nindent 4 }}
spec:
  {{- if not .Values.api.autoscaling.enabled }}
  replicas: {{ .Values.api.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "template.api.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        {{- if (include "checksum" (list $ "/api/configmap.yaml")) }}
          {{- include "checksum" (list $ "/api/configmap.yaml") | nindent 8 }}
        {{- end }}
        {{- if (include "checksum" (list $ "/api/secret.yaml")) }}
          {{- include "checksum" (list $ "/api/secret.yaml") | nindent 8 }}
        {{- end }}
        {{- with .Values.api.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "template.api.selectorLabels" . | nindent 8 }}
        {{- with .Values.api.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      strategy:
        type: {{ .Values.api.strategy.type }}
      {{- if and .Values.api.image.credentials.username .Values.api.image.credentials.password }}
      imagePullSecrets:
      - name: {{ include "template.api.fullname" . }}-pullsecret
      {{- end }}
      serviceAccountName: {{ include "template.api.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.api.podSecurityContext | nindent 8 }}
      {{- if .Values.api.initContainers }}
      initContainers:
        {{- tpl(toYaml .Values.api.initContainers) . | nindent 8 }}
      {{- end }}
      containers:
      {{- if .Values.api.extraContainers }}  
        {{- tpl(toYaml .Values.api.extraContainers) . | nindent 8 }}  
      {{- end }}
      - name: {{ .Chart.Name }}
        securityContext:
          {{- toYaml .Values.api.container.securityContext | nindent 12 }}
        image: "{{ .Values.api.image.repository }}:{{ .Values.api.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.api.image.pullPolicy }}
        {{- if .Values.api.container.command }}
        command:
        {{- range .Values.api.container.command }}
        - {{ . | quote }}
        {{- end }}
        {{- end }}
        {{- if .Values.api.container.args }}
        args:
        {{- range .Values.api.container.args }}
        - {{ . | quote }}
        {{- end }}
        {{- end }}
        ports:
        - containerPort: {{ .Values.api.service.port }}
          protocol: TCP
        envFrom:
        - configMapRef:
            name: {{ include "template.api.fullname" . }}-api
        - secretRef:
            name: {{ include "template.api.fullname" . }}-api
        {{- if .Values.api.envFrom }}
          {{- toYaml .Values.api.envFrom | nindent 8 }}
        {{- end }}
        {{- if .Values.api.startupProbe.enabled }}
        startupProbe:
          httpGet:
            path: {{ .Values.api.healthcheckPath }}
            port: {{ .Values.api.container.port }}
          initialDelaySeconds: {{ .Values.api.startupProbe.initialDelaySeconds }}
          successThreshold: {{ .Values.api.startupProbe.successThreshold }}
          failureThreshold: {{ .Values.api.startupProbe.failureThreshold }}
          periodSeconds: {{ .Values.api.startupProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.api.startupProbe.timeoutSeconds }}
        {{- end }}
        {{- if .Values.api.readinessProbe.enabled }}
        readinessProbe:
          httpGet:
            path: {{ .Values.api.healthcheckPath }}
            port: {{ .Values.api.container.port }}
          initialDelaySeconds: {{ .Values.api.readinessProbe.initialDelaySeconds }}
          successThreshold: {{ .Values.api.readinessProbe.successThreshold }}
          failureThreshold: {{ .Values.api.readinessProbe.failureThreshold }}
          periodSeconds: {{ .Values.api.readinessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.api.readinessProbe.timeoutSeconds }}
        {{- end }}
        {{- if .Values.api.livenessProbe.enabled }}
        livenessProbe:
          httpGet:
            path: {{ .Values.api.healthcheckPath }}
            port: {{ .Values.api.container.port }}
          initialDelaySeconds: {{ .Values.api.livenessProbe.initialDelaySeconds }}
          successThreshold: {{ .Values.api.livenessProbe.successThreshold }}
          failureThreshold: {{ .Values.api.livenessProbe.failureThreshold }}
          periodSeconds: {{ .Values.api.livenessProbe.periodSeconds }}
          timeoutSeconds: {{ .Values.api.livenessProbe.timeoutSeconds }}
        {{- end }}
        {{- if .Values.api.hostAliases }}  
        hostAliases:
          {{- toYaml .Values.api.hostAliases | nindent 8 }}
        {{- end }}
        resources:
          {{- toYaml .Values.api.resources | nindent 10 }}
        volumeMounts:
        {{- range $volumeMount := .Values.api.extraVolumeMounts }}
        - name: {{ $volumeMount.name }}
          mountPath: {{ $volumeMount.mountPath }}
        {{- end }}
      {{- with .Values.api.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.api.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.api.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
      {{- range $volume := .Values.api.extraVolumes }}
      - name: {{ $volume.name }}
        {{- if eq $volume.type "hostPath" }}
        hostPath:
          path: {{ $volume.path }}
        {{- end }}
        {{- if eq $volume.type "configMap" }}
        configMap:
          name: {{ $volume.name }}
        {{- end }}
      {{- end }}
